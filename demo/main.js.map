{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/an-connexion/an-connexion.component.css","webpack:///./src/app/an-connexion/an-connexion.component.html","webpack:///./src/app/an-connexion/an-connexion.component.ts","webpack:///./src/app/anews-detail/anews-auteur/anews-auteur.component.css","webpack:///./src/app/anews-detail/anews-auteur/anews-auteur.component.html","webpack:///./src/app/anews-detail/anews-auteur/anews-auteur.component.ts","webpack:///./src/app/anews-detail/anews-detail.component.css","webpack:///./src/app/anews-detail/anews-detail.component.html","webpack:///./src/app/anews-detail/anews-detail.component.ts","webpack:///./src/app/anews-detail/anews-relative/anews-relative.component.css","webpack:///./src/app/anews-detail/anews-relative/anews-relative.component.html","webpack:///./src/app/anews-detail/anews-relative/anews-relative.component.ts","webpack:///./src/app/anews/anews.component.css","webpack:///./src/app/anews/anews.component.html","webpack:///./src/app/anews/anews.component.ts","webpack:///./src/app/anews/anewsreservees/anewsreservees.component.css","webpack:///./src/app/anews/anewsreservees/anewsreservees.component.html","webpack:///./src/app/anews/anewsreservees/anewsreservees.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/erreur404/erreur404.component.css","webpack:///./src/app/erreur404/erreur404.component.html","webpack:///./src/app/erreur404/erreur404.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/services/anews.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/bloc-edition.guard.ts","webpack:///./src/app/services/connexion.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./an-edition/edition.module\": [\n\t\t\"./src/app/an-edition/edition.module.ts\",\n\t\t\"an-edition-edition-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\"","module.exports = \"<section class=\\\"formulaire\\\">\\n    <div>\\n        <h1>Connexion</h1>\\n\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"authErreur\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"authErreur = false\\\"><span aria-hidden=\\\"true\\\">&#215;</span></button> Argh, essaie encore.\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"connexion.connecte\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&#215;</span></button> Vous êtes connecté\\n        </div>\\n        <form (ngSubmit)=\\\"connexion.stockConnexion(true)\\\" #f=\\\"ngForm\\\" *ngIf=\\\"!connexion.connecte\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"login\\\">Identifiant</label>\\n                <input id=\\\"login\\\" class=\\\"form-control\\\" name=\\\"login\\\" [(ngModel)]=\\\"donneesID.login\\\" required #loginCtrl=\\\"ngModel\\\">\\n                <div *ngIf=\\\"loginCtrl.control.dirty && loginCtrl.control.hasError('required')\\\">Identifiant requis</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"mdp\\\">Mot de passe</label>\\n                <input id=\\\"mdp\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"mdp\\\" [(ngModel)]=\\\"donneesID.mdp\\\" required #mdpCtrl=\\\"ngModel\\\">\\n                <div *ngIf=\\\"mdpCtrl.control.dirty && mdpCtrl.control.hasError('required')\\\">Mot de passe requis</div>\\n            </div>\\n\\n            <button type=\\\"submit\\\" *ngIf=\\\"!connexion.connecte\\\" [disabled]=\\\"f.invalid\\\">Se connecter !</button>\\n\\n        </form>\\n        <button (click)=\\\"connexion.stockConnexion(false)\\\" *ngIf=\\\"connexion.connecte\\\">Se déconnecter</button>\\n    </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms/src/directives/ng_form';\n\nimport { AuthService } from '../services/auth.service';\nimport { ConnexionService } from '../services/connexion.service';\n/**\n * Composant de connexion\n */\n@Component({\n  selector: 'app-an-connexion',\n  templateUrl: './an-connexion.component.html',\n  styleUrls: ['./an-connexion.component.css']\n})\nexport class AnConnexionComponent implements OnInit {\n  /**\n   * Objet connecté au HTML pour récupérer les valeurs saisies dans les champs du formulaire d'authentification\n   */\n  donneesID = {\n    login: '',\n    mdp: ''\n  };\n  /**\n   * Non implémenté, permettra de gérer les erreurs\n   */\n  authErreur:boolean;\n  /**\n   * Page de connexion\n   * @param router On récupère la route\n   * @param authService Service qui s'occupe de vérifier la validité de l'authentification\n   * @param connexion Stockage du statut de l'authentification avec gestion du sessionStorage\n   */\n  constructor(private router: Router, public authService:AuthService, public connexion:ConnexionService) {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>{{auteur.nom}}</h2>\\n<p>{{auteur.infos}}</p>\"","import { Component, Input } from '@angular/core';\r\nimport { AuteursModel } from '../../modeles/auteurs.modele';\r\n\r\n@Component({\r\n  selector: 'app-anews-auteur',\r\n  templateUrl: './anews-auteur.component.html',\r\n  styleUrls: ['./anews-auteur.component.css']\r\n})\r\nexport class AnewsAuteurComponent {\r\n  /**\r\n   * @param auteur Cette valeur est reçue du composant parent (un objet optionnel contenant les paramètres de l'auteur cf. le modèle correspondant)\r\n   */\r\n  @Input() auteur:AuteursModel;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<section class=\\\"unique\\\">\\n    <!-- <a href routerLink=\\\"auteur\\\">AUTEUR</a> -->\\n    <article>\\n        <h2>{{newsActu.titre}}</h2>\\n\\n        <img [src]=\\\"newsActu.img\\\" />\\n        <!-- Sanitisation pour permettre l'affichage de balises HTML -->\\n        <p [innerHtml]=\\\"sanitizer.bypassSecurityTrustHtml( newsActu.intro )\\\"></p>\\n        <p [innerHtml]=\\\"sanitizer.bypassSecurityTrustHtml( newsActu.description )\\\"></p>\\n        <a href [routerLink]=\\\"['/edition', newsId]\\\" *ngIf=\\\"connexion.connecte\\\"><img src=\\\"./assets/images/Settings.png\\\" class=\\\"edition\\\" /></a>\\n    </article>\\n\\n</section>\\n<!-- Afficher l'auteur d'une nouvelle -->\\n<section class=\\\"unique\\\" *ngIf=\\\"newsActu.auteur\\\">\\n    <article>\\n        <blockquote>\\n            <app-anews-auteur [auteur]=\\\"newsActu.auteur\\\"></app-anews-auteur>\\n        </blockquote>\\n    </article>\\n</section>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'; // Nettoyer du html dans une chaîne\n\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { NouvellesModel } from '../modeles/nouvelles.modele';\nimport { AnewsService } from '../services/anews.service';\nimport { AuthService } from '../services/auth.service';\nimport { ConnexionService } from '../services/connexion.service';\n\n@Component({\n  selector: 'app-anews-detail',\n  templateUrl: './anews-detail.component.html',\n  styleUrls: ['./anews-detail.component.css']\n})\nexport class AnewsDetailComponent implements OnInit, OnDestroy {\n  /**\n   * Index (ou _id) éventuel de la news à afficher\n   */\n  newsId:number;\n\n  donnees$:Subscription;\n\n  news:NouvellesModel[];\n  newsActu:NouvellesModel;\n  /**\n   * \n   * @param donnees Service délivrant les données sur les news\n   * @param routeParams Paramètres de la route\n   * @param connexion Récupérer l'état de connexion d'un internaute\n   * @param sanitizer Gérer l'affichage de balises HTML\n   */\n  constructor(public donnees:AnewsService, private routeParams:ActivatedRoute, public connexion:ConnexionService, public sanitizer: DomSanitizer) { }\n  \n  /**\n   * On initialise les données de la news à afficher à partir de l'index transmis\n   * La news est récupérée directement depuis le service\n   */\n  ngOnInit() {\n    this.newsId = 0; // Valeur par défaut de newsId\n\n    this.routeParams.params.subscribe(params => {\n      // Paramétrage de l'actualité si le tableau est déjà chargé\n      this.newsId = +params['id']; // (+) converts string 'id' to a number\n      console.log(this.newsId);\n      this.newsActu = this.donnees.getNews(this.newsId);\n   });\n   \n  }\n  /**\n   * Supprimer la souscription aux observables s'il y en a pour libérer la mémoire\n   */\n  ngOnDestroy(){\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  anews-relative works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-anews-relative',\n  templateUrl: './anews-relative.component.html',\n  styleUrls: ['./anews-relative.component.css']\n})\nexport class AnewsRelativeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"section {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    padding: 20px;\\r\\n    flex-flow: wrap row;\\r\\n}\\r\\n\\r\\narticle {\\r\\n    width: 20%;\\r\\n    height: 400px;\\r\\n    transition: all 0.3s ease-in-out;\\r\\n    box-shadow: 0px 0px 5px #000;\\r\\n    background: #FFF;\\r\\n    margin: 20px;\\r\\n    color: #000;\\r\\n    padding: 10px 20px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\narticle:hover {\\r\\n    -webkit-transform: scale(1.05);\\r\\n            transform: scale(1.05);\\r\\n    box-shadow: 1px 2px 8px #000;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\narticle .img {\\r\\n    min-width: 100%;\\r\\n    height: 200px;\\r\\n    margin: -10px -30px 0 -20px;\\r\\n    background: 50% 50% no-repeat;\\r\\n    background-size: cover;\\r\\n}\"","module.exports = \"<section>\\n    <article *ngFor=\\\"let n of news\\\" (click)=goNews(n._id)>\\n        <div class=\\\"img\\\" [style.backgroundImage]=\\\"'url('+n.img+')'\\\"></div>\\n        <h3>{{n.titre}}</h3>\\n        <!-- Gestion des balises HTML injectées -->\\n        <p [innerHtml]=\\\"sanitizer.bypassSecurityTrustHtml( n.intro )\\\"></p>\\n    </article>\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'; // Nettoyer du html dans une chaîne\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { NouvellesModel } from '../modeles/nouvelles.modele';\r\nimport { AnewsService } from '../services/anews.service';\r\nimport { ConnexionService } from '../services/connexion.service';\r\n\r\n@Component({\r\n  selector: 'app-anews',\r\n  templateUrl: './anews.component.html',\r\n  styleUrls: ['./anews.component.css']\r\n})\r\nexport class AnewsComponent implements OnInit{\r\n  /**\r\n   * Liste sauvegardée des news\r\n   */\r\n  news:NouvellesModel[];\r\n  visible:boolean=false;\r\n  /**\r\n   * Composant de listing des news, constitue la page d'accueil\r\n   * @param donnees Service qui récupère et stocke les données\r\n   * @param route Récupérer les routes\r\n   * @param sanitizer Un outil pour traiter les balise HTML dans les textes, afin de les afficher et les traiter s'il y en a\r\n   * @param connexion Savoir si l'internaute est connecté ou non\r\n   */\r\n  constructor(private donnees:AnewsService, private route:Router, public sanitizer: DomSanitizer, private connexion:ConnexionService) {  }\r\n  /**\r\n   * Démonstration de l'utilisation d'observables pour récupérer et synchroniser des données\r\n   */\r\n  ngOnInit() {\r\n    this.news = this.donnees.news$.getValue(); // Si le tableau est déjà chargé\r\n    console.log(\"Données initiées\", this.news);\r\n    this.donnees.news$.subscribe(\r\n      data => {\r\n        console.log(\"Données prêtes\", data);\r\n        this.news = data;\r\n    });\r\n  }\r\n  /**\r\n   * Aller sur la page du détail des news en transmettant l'index de la news à afficher\r\n   * @param newsId Index de la news à afficher. Pourrait être remplacée par l'_id de la news\r\n   */\r\n  goNews(newsId:number){\r\n    this.route.navigate(['/news', newsId]);\r\n  }\r\n  /**\r\n   * Une fonction qui ne sert à rien ^^ ou presque\r\n   */\r\n  confirme(){\r\n    console.log(\"C'est cliqué\");\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  anewsreservees works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-anewsreservees',\n  templateUrl: './anewsreservees.component.html',\n  styleUrls: ['./anewsreservees.component.css']\n})\nexport class AnewsreserveesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BlocEditionGuard } from './services/bloc-edition.guard';\nimport { AppComponent } from './app.component';\nimport { AnewsComponent } from './anews/anews.component';\nimport { AnewsDetailComponent } from './anews-detail/anews-detail.component';\nimport { AnEditionComponent } from './an-edition/an-edition.component';\nimport { AnConnexionComponent } from './an-connexion/an-connexion.component';\nimport { Erreur404Component } from './erreur404/erreur404.component';\nimport { AnewsAuteurComponent } from './anews-detail/anews-auteur/anews-auteur.component';\nimport { AnewsRelativeComponent } from './anews-detail/anews-relative/anews-relative.component';\n\n/**\n * Liste des routes utilisées dans l'application\n * Les routes relative au module d'édition sont gérées directement dans le module des routes dédié\n */\nconst routes: Routes = [\n  { path: '', component: AnewsComponent },\n  { path: 'news', component: AnewsDetailComponent },\n  { path: 'news/:id', component: AnewsDetailComponent,\n  children: [\n    { path: 'auteur', component: AnewsAuteurComponent },\n    { path: 'relatif', component: AnewsRelativeComponent }\n  ] },\n  { path: 'edition', loadChildren: './an-edition/edition.module#EditionModule', canLoad: [BlocEditionGuard] },\n  { path: 'connexion', component: AnConnexionComponent },\n  // { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: '**', component: Erreur404Component }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers:[ BlocEditionGuard ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#logo {}\\r\\n\\r\\nh1 {\\r\\n    position: absolute;\\r\\n    right: 20px;\\r\\n    top: 0px;\\r\\n}\"","module.exports = \"<app-menu [logo]=\\\"logo\\\"></app-menu>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Meta } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  logo:string = 'assets/images/angular_news.png';\n\n  /**\n   * Composant de base initié dans le bootstrap du module principal\n   * @param titre Titre de l'application affiché dans le navigateur\n   * @param metas Les métadonnées de l'application\n   */\n  constructor(private titre:Title, metas:Meta) {\n    titre.setTitle('Angular News - quelques infos');\n    metas.addTag({ name: 'author', content: 'exlineo / Gérald Abbadie' });\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { EditionModule } from './an-edition/edition.module';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AnewsComponent } from './anews/anews.component';\nimport { AnConnexionComponent } from './an-connexion/an-connexion.component';\nimport { Erreur404Component } from './erreur404/erreur404.component';\nimport { AnewsService } from './services/anews.service';\nimport { AuthService } from './services/auth.service';\nimport { AnewsDetailComponent } from './anews-detail/anews-detail.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AnewsAuteurComponent } from './anews-detail/anews-auteur/anews-auteur.component';\nimport { AnewsRelativeComponent } from './anews-detail/anews-relative/anews-relative.component';\nimport { AnewsreserveesComponent } from './anews/anewsreservees/anewsreservees.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnewsComponent,\n    AnConnexionComponent,\n    Erreur404Component,\n    AnewsDetailComponent,\n    MenuComponent,\n    AnewsAuteurComponent,\n    AnewsRelativeComponent,\n    AnewsreserveesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    NoopAnimationsModule,\n    AppRoutingModule\n  ],\n  providers: [AnewsService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  erreur404 works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-erreur404',\n  templateUrl: './erreur404.component.html',\n  styleUrls: ['./erreur404.component.css']\n})\nexport class Erreur404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".logo {\\r\\n    float: left;\\r\\n    margin-right: 20px;\\r\\n}\\r\\n\\r\\n.logo:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nnav {\\r\\n    padding: 20px;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nnav ul li {\\r\\n    list-style: none;\\r\\n    text-transform: uppercase;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\nnav a:hover {\\r\\n    background: rgba(255, 255, 255, 0.8);\\r\\n    color: rgb(18, 105, 177);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nnav a {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n    padding: 10px 20px;\\r\\n}\"","module.exports = \"<nav>\\n    <img [src]=\\\"logo\\\" class=\\\"logo\\\" [routerLink]=\\\"['/']\\\" />\\n    <ul>\\n        <li><a href='' routerLink=\\\"/\\\">Accueil</a></li>\\n        <li><a href='' [routerLink]=\\\"['/news', 1]\\\">Actualité</a></li>\\n        <li><a href='' *ngIf=\\\"connexion.connecte\\\" routerLink=\\\"/edition\\\">Editer une news</a></li>\\n        <li><a href='' routerLink=\\\"/connexion\\\">Connexion</a></li>\\n    </ul>\\n</nav>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Routes } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { ConnexionService } from '../services/connexion.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Input() logo:string;\n  /**\n   * Menu de l'application. Il gère les liens vers les routes\n   * @param connexion Vérifier l'authentification des internautes\n   */\n  constructor(public connexion:ConnexionService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NouvellesModel } from '../modeles/nouvelles.modele';\nimport { forEach } from '@angular/router/src/utils/collection';\n\n@Injectable()\nexport class AnewsService{\n  /**\n   * Objet dans lequel nous stockons les données chargées en Ajax. Elles seront sous le format tableau de NouvelleModel, une interface Typescript (cf. le dossier modeles)\n   */\n  news: NouvellesModel[];\n  /**\n   * Le BehavioSubject est un observable qui s'initialise avec des données de base évitant des erreurs liées à un objet vide. Nous l'utilisons pour montrer comment ça marche mais nous pouvons nous en passer dans l'application\n   */\n  news$: BehaviorSubject<NouvellesModel[]> = new BehaviorSubject<NouvellesModel[]>([]);\n  prepareNews:string;\n  /**\n   * Service de chargement et gestion des news à afficher dans l'application\n   * @param http Instanciation de la classe HttpClient pour utiliser des requêtes Ajax\n   * @param location Donner une base aux URLs pour éviter les erreurs de chargement local\n   */\n  constructor(private http: HttpClient, private location:Location) {\n    this.chargeDonnees();\n  }\n  /**\n   * Appel des données en Ajax et sauvegarde dans un objet news et un observable news$ pour l'exemple\n   */\n  chargeDonnees() {\n    this.http.get<NouvellesModel[]>(this.location.prepareExternalUrl('/assets/datas/nouvelles.json'))\n    .subscribe(data => {\n      this.news = data;\n      this.news$.next(data);\n    });\n  }\n\n  /**\n   * Méthode d'identification d'une news spécifique à afficher. Prend en compte la valeur de ID\n   * @param id index ou _id d'une noucelle à récupérer\n   */\n  getNews(id: number | string):NouvellesModel {\n    // let tmp = this.news$.getValue();\n    // Tester si l'id de la news est de type ObjectId de MongoDB\n    for(let i in this.news){\n      console.log(i);\n      if(this.news[i]['_id'] == id){\n        console.log(\"Objet retourné\", i);\n        return this.news[i];\n      }\n    }\n  }\n\n}\n","import { Injectable, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ConnexionService } from './connexion.service';\n\n@Injectable()\nexport class AuthService {\n    /**\n     * Gérer les échanges Http lors d'une authentification d'un internaute\n     * @param http Une instance de HttpClient pour les appels Ajax\n     * @param connexion Instance du service ConnexionService qui regroupe les objets et méthodes liés aux authentifications\n    */\n  constructor(private http: HttpClient, private connexion:ConnexionService) {\n    this.connexion.connecte = this.connexion.recupereConnexion();\n  }\n  /**\n   * Exemple de méthode utilisable pour gérer l'authentification avec un serveur distant\n   * @param login Login à transmettre au serveur distant\n   * @param mdp Mot de passe à transmettre au serveur distant\n   */\n  enregistre(login, mdp): Observable<any> {\n    const body = { login, mdp };\n    return this.http.post('assets/datas/id.json', body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConnexionService } from './connexion.service';\n\n@Injectable()\nexport class BlocEditionGuard implements CanActivate {\n  \n  constructor(private route:Router, private connexion:ConnexionService){}\n  /**\n   * La méthode canActivate permet de bloquer des routes. Elles doit renvoyer un booléen\n   * @param next \n   * @param state \n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      // On récupère la donnée sur le service d'authentification\n      if(this.connexion.connecte){\n        return true;\n      }\n  }\n  /**\n   * La garde qui charge le module d'édition lorsque les utilisateurs sont connectés\n   * @param next \n   * @param state \n   */\n  canLoad(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      // On récupère la donnée sur le service d'authentification\n      if(this.connexion.connecte){\n        return true;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnexionService {\n  /**\n   * Un internaute est connecté\n   */\n  connecte : boolean = false;\n  /**\n   * Gérer l'état d'identification d'un tiers\n   * Nous utilisons une classe spécifique pour éviter les conflits et boucles liés à l'utilisation de la classe HttpClient\n   */\n  constructor() {\n    this.connecte = this.recupereConnexion();\n  }\n\n  /**\n   * Récupérer la connexion si elle a été stockée\n   */\n  recupereConnexion():boolean{\n    if(sessionStorage.getItem('connexion')){\n      return JSON.parse(sessionStorage.getItem('connexion'));\n    }\n      return this.connecte;\n  }\n  /**\n   * Stock l'enregistrement dans le local storage\n   * @param tag Un booléen pour dire s'il s'agit d'une connexion ou une déconnexion\n   */\n  stockConnexion(tag: boolean) {\n    this.connecte = tag;\n    sessionStorage.setItem('connexion', JSON.stringify(tag));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}